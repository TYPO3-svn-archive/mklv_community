<?php

/**
 * Class definition file for displaying user privacy settings in the frontend
 * 
 * @author Michael Knoll, Lars Volker
 * @package Typo3
 * @subpackage mklv_community
 *
 */
class tx_mklvcommunity_controllers_userPrivacy extends tx_mklvcommunity_controller {
    
    /**
     * default action overwrites the default-action function 
     * which normally is called defaultAction
     * 
     * defaultAction is called by the controller parent class if no $defaultAction var is set
     */
    public $defaultAction = 'showUserPrivacy';

    /**
     * Shows a form where a user can set his privacy settings
     *
     * @return string	Generated HTML code for the frontend view
     */
    public function showUserPrivacyAction() {
		$actionPipe = $this->makeInstance('tx_mklvcommunity_models_userPrivacy');
		$actionPipe->loadUserPrivacyByUid($this->_getUid());
		$actionPipe = $this->makeInstance('tx_mklvcommunity_views_userPrivacy', $actionPipe);
		$actionPipe->render('userPrivacyTemplate');
		$actionPipe = $this->makeInstance('tx_lib_translatorProcessor', $actionPipe);
		$actionPipe->translate();
		return $actionPipe->get('result');
    }
    
    /**
     * Saves the form to the database and returns the form with a
     * message, that the privacy has been saved
     *
     */
    public function saveUserPrivacyAction() {
    	if (!($this->parameters->get('privacyFlag') >= 0)) {
    		return "saveUserPrivacyAction needs parameter privacyFlag to be >= 0!'";
    	} else {
    		$privacyFlag = $this->parameters->get('privacyFlag');
    		$model = $this->makeInstance('tx_mklvcommunity_models_userPrivacy');
    		$model->saveUserPrivacy($privacyFlag);
    	}
    	return $this->showUserPrivacyAction();
    }
    
    /**
     * Overwrite undefindedAction. If a unknown action is given, return 
     * default action, which is showUserPrivacy
     * 
     * @todo put it in inherited super controller for community
     *
     * @return string HTMl Code generated by showUserPrivacyAction
     */
    /*public function undefinedAction() {
    	return $this-> {$this->defaultAction.'Action'}();
    }*/
    
    /**
     * Returns the userId of the logged in user
     *
     * @return int	UID of the logged in user
     */
    private function _getUid() {
    	$tmpUser = get_object_vars($GLOBALS['TSFE']->fe_user);
		return $tmpUser['user']['uid'];
    }
    
}

if (defined('TYPO3_MODE') && $TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/mklv_community/controllers/class.tx_mklvcommunity_controllers_userPrivacy.php']) {
	include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/mklv_community/controllers/class.tx_mklvcommunity_controllers_userPrivacy.php']);
}

?>